test_data_dir=./scripts/test_outputs
data_dir=./dna

apm_executable=./apm_parallel
test_iterations=3

# re-build if needed
make

# Function to compare outputs
validate(){
    # Simply to color output
    local green="\033[0;32m"
    local red="\033[0;31m"
    local clear="\033[0m"

    local DIFF=$(diff $1 $2)
    if [ "$DIFF" == "" ] 
    then
        echo -e "${green}result OK${clear}"
    else
        echo -e "${red}fail${clear}"
        diff $1 $2
    fi    
}

# First test: easy input data
echo -e "\nRunning easy input test"
easy_input(){
    local out_dir=$1
    salloc -Q -N 3 -n 8 mpirun $apm_executable 0 $data_dir/easy.fa 123 456 78934 "PATTERNS_OVER_RANKS" > $out_dir
} 

# Base case: pure mpi (1 omp thread)
OMP_NUM_THREADS=1 easy_input $test_data_dir/easy_expected

# Hybrid: >1 omp thread
for ((i=1;i<=$test_iterations;i++)); do
    echo "Test iteration $i"
    OMP_NUM_THREADS=${1:-1} easy_input $test_data_dir/easy_output
    # Check if pure mpi and hybrid gave same results
    validate $test_data_dir/easy_expected $test_data_dir/easy_output
done



# Complex test: larger input data, same procedure as above
echo -e "\nRunning complex input test"
complex_input(){
    local out_dir=$1
    salloc -Q -N 2 -n 2 mpirun $apm_executable 0 $data_dir/small_chrY_x100.fa $(cat $data_dir/line_10.fa) $(cat $data_dir/line_20.fa) $(cat $data_dir/line_non_existent.fa)  $(cat $data_dir/line_10.fa) $(cat $data_dir/line_20.fa) $(cat $data_dir/line_non_existent.fa) "PATTERNS_OVER_RANKS" > $out_dir
}

OMP_NUM_THREADS=1 complex_input $test_data_dir/complex_expected

for ((i=1;i<=$test_iterations;i++)); do
    echo "Test iteration $i"
    OMP_NUM_THREADS=${1:-1} complex_input $test_data_dir/complex_output
    validate $test_data_dir/complex_expected $test_data_dir/complex_output
done

